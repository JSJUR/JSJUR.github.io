

local AimlockKey = Enum.KeyCode.Q

















local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Camera = workspace.CurrentCamera

local LocalPlayer = Players.LocalPlayer
local Aimlock = false
local Balls = {}

local function createBallForPlayer(player)
	if player == LocalPlayer then
		return
	end
	local function onCharacterAdded(character)
		local HumanoidRootPart = character:WaitForChild("HumanoidRootPart")
		local Humanoid = character:WaitForChild("Humanoid")

		local Ball = Instance.new("Part", workspace)
		Ball.Size = Vector3.new(0.5, 0.5, 0.5)
		Ball.Shape = Enum.PartType.Ball
		Ball.Material = Enum.Material.Neon
		Ball.BrickColor = BrickColor.new("Bright blue")
		Ball.Anchored = true
		Ball.CanCollide = false
		Ball.Name = player.Name .. "'s Ball"

		Balls[player] = Ball

		local Highlight = Instance.new("Highlight", Ball)
		Highlight.FillTransparency = 1
		Highlight.OutlineTransparency = 0.5

		local Jumping = false

		Humanoid.StateChanged:Connect(function(_, NewState)
			if NewState == Enum.HumanoidStateType.Jumping or NewState == Enum.HumanoidStateType.Freefall then
				Jumping = true
			else
				Jumping = false
			end
		end)

		local function UpdateBallPosition()
			local MoveDirection = Humanoid.MoveDirection
			local CameraDirection = Camera.CFrame.LookVector
			local CombinedDirection = MoveDirection * Vector3.new(1, 0, 1) + Vector3.new(0, MoveDirection.Y, 0)

			local NewPosition

			if Jumping then
				NewPosition = HumanoidRootPart.Position + Vector3.new(0, 2, 0) + CombinedDirection * 2
			elseif CombinedDirection.Magnitude > 0 then
				CombinedDirection = CombinedDirection.Unit
				NewPosition = HumanoidRootPart.Position + CombinedDirection * 2
			else
				NewPosition = HumanoidRootPart.Position
			end

			if NewPosition then
				Ball.Position = NewPosition
			end
		end

		RunService.RenderStepped:Connect(UpdateBallPosition)
	end

	player.CharacterAdded:Connect(onCharacterAdded)
	if player.Character then
		onCharacterAdded(player.Character)
	end

	player.CharacterRemoving:Connect(function()
		if Balls[player] then
			Balls[player]:Destroy()
			Balls[player] = nil
		end
	end)
end

local function GetNearestTarget()
	local closestBall
	local shortestDistance = math.huge

	for player, ball in pairs(Balls) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local pos = Camera:WorldToViewportPoint(ball.Position)
			local distance = (Vector2.new(pos.X, pos.Y) - Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)).Magnitude
			if distance < shortestDistance then
				closestBall = ball
				shortestDistance = distance
			end
		end
	end

	return closestBall
end

for _, player in pairs(Players:GetPlayers()) do
	createBallForPlayer(player)
end

Players.PlayerAdded:Connect(createBallForPlayer)

Players.PlayerRemoving:Connect(function(player)
	if Balls[player] then
		Balls[player]:Destroy()
		Balls[player] = nil
	end
end)

local function deleteAllBalls()
	for player, ball in pairs(Balls) do
		if ball then
			ball:Destroy()
			Balls[player] = nil
		end
	end
end

UserInputService.InputBegan:Connect(function(Input, Typing)
	if not Typing then
		if Input.KeyCode == AimlockKey then
			Aimlock = not Aimlock
			if Aimlock then
				local nearestBall = GetNearestTarget()
				if nearestBall then
					CurrentBall = nearestBall
				else
					Aimlock = false
				end
			end
		elseif Input.KeyCode == Enum.KeyCode.P then
			game.StarterGui:SetCore("SendNotification", {
				Title = "Delete Camlock?",
				Text = "Do you want to delete all balls?",
				Button1 = "Delete",
				Button2 = "Cancel",
				Callback = function(buttonPressed)
					if buttonPressed == "Delete" then
						deleteAllBalls()
					end
				end
			})
		end
	end
end)

RunService.RenderStepped:Connect(function()
	if Aimlock and CurrentBall then
		Camera.CFrame = CFrame.new(Camera.CFrame.Position, CurrentBall.Position)
	end
end)
